openapi: 3.0.0
info:
  title: CiboCompass Dish API
  version: 1.3.1
  description: |
    API for discovering Italian dishes with:
    - Nutritional information
    - Exercise equivalents
    - Country-specific popularity ratings
  contact:
    email: dev@cibocompass.com
  license:
    name: Proprietary

x-tagGroups:
  - name: Core Features
    tags: [Dishes]
  - name: User Engagement
    tags: [Feedback]

servers:
  - url: https://api.cibocompass.com/v1
    description: Production API

paths:
  /dishes/search:
    get:
      operationId: getDishDetails
      summary: Retrieve dish details
      tags: [Dishes]
      parameters:
        - $ref: '#/components/parameters/DishNameQueryParam'
        - $ref: '#/components/parameters/NationalityHeader'
      responses:
        '200':
          description: Successful dish information retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DishDetails'
              examples:
                standardResponse:
                  value:
                    dishName: "Pasta Carbonara"
                    dishImageUrl: "https://example.com/pasta-carbonara.jpg"
                    calories: 550
                    runningMinutes: 45.5
                    popularity:
                      likePercentage: 85.0
                      dislikePercentage: 15.0
                    canSubmitFeedback: true
        '404':
          $ref: '#/components/responses/NotFoundError'

  /dishes/feedback:
    post:
      operationId: submitDishFeedback
      summary: Submit dish feedback
      tags: [Feedback]
      parameters:
        - $ref: '#/components/parameters/NationalityHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DishFeedback'
            examples:
              likeExample:
                value:
                  dishName: "Pasta Carbonara"
                  feedback: "like"
              dislikeExample:
                value:
                  dishName: "Pasta Carbonara"
                  feedback: "dislike"
      responses:
        '200':
          description: Feedback successfully recorded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackResult'
              examples:
                successResponse:
                  value:
                    success: true
                    updatedStats:
                      likePercentage: 86.0
                      dislikePercentage: 14.0
        '400':
          $ref: '#/components/responses/ValidationError'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  parameters:
    DishNameQueryParam:
      in: query
      name: dishName
      required: true
      schema:
        type: string
        minLength: 2
      description: Name of the dish to lookup
      example: "Pasta Carbonara"

    NationalityHeader:
      in: header
      name: X-User-Nationality
      required: true
      schema:
        type: string
        pattern: '^[A-Z]{2}$'
      description: ISO 3166-1 alpha-2 country code
      example: "US"

  schemas:
    PopularityStats:
      type: object
      properties:
        likePercentage:
          type: number
          format: float
          minimum: 0
          maximum: 100
          example: 85.0
        dislikePercentage:
          type: number
          format: float
          minimum: 0
          maximum: 100
          example: 15.0

    DishDetails:
      type: object
      required:
        - dishName
        - calories
        - runningMinutes
        - popularity
      properties:
        dishName:
          type: string
          example: "Pasta Carbonara"
        dishImageUrl:
          type: string
          format: uri
          example: "https://example.com/pasta-carbonara.jpg"
        calories:
          type: integer
          minimum: 0
          description: Calories per standard serving
          example: 550
        runningMinutes:
          type: number
          format: float
          minimum: 0
          description: Minutes of running needed to burn the calories
          example: 45.5
        popularity:
          $ref: '#/components/schemas/PopularityStats'
        canSubmitFeedback:
          type: boolean
          description: Whether user can submit feedback
          example: true

    DishFeedback:
      type: object
      required:
        - dishName
        - feedback
      properties:
        dishName:
          type: string
          example: "Pasta Carbonara"
        feedback:
          type: string
          enum: [like, dislike]
          description: User's rating

    FeedbackResult:
      type: object
      properties:
        success:
          type: boolean
          example: true
        updatedStats:
          $ref: '#/components/schemas/PopularityStats'

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Dish not found"
        errorCode:
          type: string
          example: "NOT_FOUND"
        details:
          type: string
          nullable: true
          example: "No dish matching 'Pasta Unknown' was found"

  responses:
    NotFoundError:
      description: Requested resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            dishNotFound:
              value:
                error: "Dish not found"
                errorCode: "NOT_FOUND"
                details: "No dish matching 'Pasta Unknown' was found"

    ValidationError:
      description: Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            invalidFeedback:
              value:
                error: "Invalid feedback"
                errorCode: "VALIDATION_ERROR"
                details: "Feedback must be either 'like' or 'dislike'"
